// Generated by CoffeeScript 1.9.1
'use strict';
angular.module('ZooLib.directives.switchItem', []).directive('switchItem', function($log, itemService) {
  return {
    restrict: 'E',
    replace: true,
    templateUrl: 'partials/directives/switchItem.html',
    scope: {
      item: '='
    },
    link: function(scope) {
      var i, len, ref, tag, updateItem;
      scope.options = {};
      updateItem = function(newState) {
        scope.item.state = newState;
        return scope.$apply();
      };
      ref = scope.item.tags;
      for (i = 0, len = ref.length; i < len; i++) {
        tag = ref[i];
        scope.options.cssIconClass = (function() {
          switch (tag) {
            case 'power':
              return 'i-power';
            case 'light':
              return 'i-light-on-small';
          }
        })();
      }
      scope.$watch('item.state', function(state, oldState) {
        if (state === oldState) {
          return;
        }
        itemService.sendCommand({
          itemName: scope.item.name
        }, state);
        return $log.debug("Model change: " + scope.item.label + " from " + oldState + " to " + state);
      });
      scope.$watch('item', function(item) {
        if (item == null) {
          return;
        }
        return scope.$on("smarthome/command/" + item.name, function(event, newState) {
          return updateItem(newState);
        });
      });
    }
  };
});
